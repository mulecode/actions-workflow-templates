name: Terraform Test

on:
  workflow_call:
    inputs:
      modulePath:
        description: "Module path to run terraform commands"
        type: string
        default: ./
      terraformDir:
        description: "Module path to run terraform commands"
        type: string
        default: /
      awsRole:
        description: "The role to assume for the deployment"
        required: true
        type: string
      awsRegion:
        description: "The region for the deployment"
        required: true
        type: string
      awsSessionName:
        description: "The session name for the deployment"
        required: true
        type: string
      chainedRole:
        description: "The optional chained role to assume"
        required: false
        type: string
      environment:
        description: "The terraform environment name, eg.: dev"
        required: true
        type: string
      environment_vars:
        description: "Any environment variables to be passed to the terraform module"
        required: false
        type: string
      commentTitle:
        description: "The comment title for summarized terraform plan"
        required: true
        type: string
      issueNumber:
        description: "The issue or pull request number"
        required: true
        type: string
    secrets:
      githubToken:
        description: "GitHub Token for commenting in the PR"
        required: true
      environment_secrets:
        description: "GitHub secrets o be used in the workflow"
        required: false

jobs:
  terraform_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ inputs.awsRole }}
          role-session-name: ${{ inputs.awsSessionName }}
          aws-region: ${{ inputs.awsRegion }}
      - name: Assuming chained role in ${{ matrix.environment }}
        if: ${{ inputs.chainedRole != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.awsRegion }}
          role-to-assume: ${{ inputs.chainedRole }}
          role-session-name: ${{ inputs.awsSessionName }}
          role-chaining: true
      - name: Terraform Format
        run: make -C ${{ inputs.modulePath }} lint
      - name: Terraform Init Plan Validate
        run: |
          echo "Terraform Init Plan Validate for ENV ${{ inputs.environment }} TERRAFORM_DIR ${{ inputs.terraformDir }}"
          make -C ${{ inputs.modulePath }} test \
            ENV=${{ inputs.environment }} \
            TERRAFORM_DIR=${{ inputs.terraformDir }} \
            ENV_VARS="${{ inputs.environment_vars }}" \
            ENV_SECRETS="${{ secrets.environment_secrets }}"
      - name: Summarize Terraform Plan
        id: summariseTerraformPlan
        uses: mulecode/github-action-terraform-plan-summarizer@main
        with:
          terraformPlanJson: ${{ inputs.modulePath }}/plan.json
      - name: Create or update comment
        uses: mulecode/github-action-comment-manager@main
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          issueNumber: ${{ inputs.issueNumber }}
          commentTitle: ${{ inputs.commentTitle }}
          commentBodyFile: ${{ steps.summariseTerraformPlan.outputs.summarisedPlan }}
