name: Terraform Deploy

on:
  workflow_call:
    inputs:
      modulePath:
        description: "Module path to run terraform commands"
        type: string
        default: ./
      terraformDir:
        description: "Module path to run terraform commands"
        type: string
        default: /
      awsRole:
        description: "The role to assume for the deployment"
        required: true
        type: string
      awsRegion:
        description: "The region for the deployment"
        required: true
        type: string
      awsSessionName:
        description: "The session name for the deployment"
        required: true
        type: string
      chainedRole:
        description: "The optional chained role to assume"
        required: false
        type: string
      environment:
        description: "The terraform environment name, eg.: dev"
        required: true
        type: string
      environment_vars:
        description: "Any environment variables to be passed to the terraform module"
        required: false
        type: string
      artifactName1:
        description: "Optional download artfact 1"
        required: false
        type: string
      artifactPath1:
        description: "Optional path for artfact 1"
        required: false
        type: string
      artifactName2:
        description: "Optional download artfact 2"
        required: false
        type: string
      artifactPath2:
        description: "Optional path for artfact 2"
        required: false
        type: string
      artifactName3:
        description: "Optional download artfact 3"
        required: false
        type: string
      artifactPath3:
        description: "Optional path for artfact 3"
        required: false
        type: string
    secrets:
      environment_secrets:
        description: "GitHub secrets o be used in the workflow"
        required: false

jobs:
  terraform_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact1 ${{ inputs.artifactName1 }}
        if: inputs.artifactName1 != ''
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifactName1 }}
          path: ${{ inputs.artifactPath1 }}
      - name: Download artifact2 ${{ inputs.artifactName2 }}
        if: inputs.artifactName2 != ''
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifactName2 }}
          path: ${{ inputs.artifactPath2 }}
      - name: Download artifact3 ${{ inputs.artifactName3 }}
        if: inputs.artifactName3 != ''
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifactName3 }}
          path: ${{ inputs.artifactPath3 }}
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ inputs.awsRole }}
          role-session-name: ${{ inputs.awsSessionName }}
          aws-region: ${{ inputs.awsRegion }}
      - name: Assuming chained role in ${{ matrix.environment }}
        if: ${{ inputs.chainedRole != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.awsRegion }}
          role-to-assume: ${{ inputs.chainedRole }}
          role-session-name: ${{ inputs.awsSessionName }}
          role-chaining: true
      - name: Terraform Init Plan Apply
        run: |
          make -C ${{ inputs.modulePath }} deploy ENV="${{ inputs.environment }}" TERRAFORM_DIR="${{ inputs.terraformDir }}" ENV_VARS="${{ inputs.environment_vars }}" ENV_SECRETS="${{ secrets.environment_secrets }}"
